


buildscript {
    ext {
        kotlinVersion = "1.2.10"
        gradleShadowVersion = "2.0.2"
        gradleJooqVersion = "2.0.7"
        gradleDependencyVersion = "1.0.4.RELEASE"
        springBootVersion = "1.5.11.RELEASE"
        springBootRedisVersion = "1.5.11.RELEASE"
        springConsulVersion = "1.3.0.RELEASE"
        swaggerVersion = "1.5.17"
        jaxrsVersion = "2.0"
        jacksonVersion = "2.9.10"
        esVersion = "5.6.14"
        searchGuardSSLVersion = "5.6.14-23"
        hashidsVersion = "1.0.3"
        feignVersion = "9.5.1"
        feignFormVersion = "3.8.0"
        okHttpVersion = "3.9.1"
        commonExecVersion = "1.3"
        bouncyCastleVersion = "1.46"
        dom4jVersion = "1.6.1"
        slf4jVersion = "1.7.25"
        mockitoVersion = "1.10.19"
        httpclientVersion = "4.5.2"
        compressVersion = "1.19"
        jjwtVersion = "0.9.0"
        jsonLibVersion = "2.4"
        commonLang3Version = "3.5"
        guavaVersion = "21.0"
        cronutilsVersion = "7.0.1"
        reflectionsVersion = "0.9.11"
        jsonSchemaVersion = "2.2.6"
        logbackVersion = "1.1.11"
        jasyptVersion = "2.0.0"
        jolokiaVersion = "1.6.0"
        awsS3Version = "1.11.461"
        pf4jVersion = "3.0.1"
        pluginsDir = rootProject.buildDir.path + '/plugins'
        commonApiVersion = "1.0.3"
        commonApiCanwayVersion = "1.0.0"
        commonArchiveVersion = "1.0.0"
        commonArchiveJforgVersion = "1.0.0"
        commonAuthApiVersion = "1.0.7"
        commonClientVersion = "1.0.0"
        commonDaoVersion = "1.0.0"
        commonDbVersion = "1.0.0"
        commonEsVersion = "1.0.0"
        commonFileVersion = "1.0.0"
        commonJ8timeAdapterVersion = "1.0.0"
        commonJobVersion = "1.0.0"
        commonLicenseVersion = "1.0.0"
        commonLogVersion = "1.0.0"
        commonMeasureVersion = "1.0.0"
        commonNotifyVersion = "1.0.0"
        commonPipelineVersion = "1.0.0"
        commonRedisVersion = "1.0.0"
        commonScmVersion = "1.0.0"
        commonServiceVersion = "1.0.0"
        commonWebVersion = "1.0.0"
        commonWeChatWorkVersion = "1.0.0"
        commonEventVersion = "1.0.0"
        commonTestVersion = "1.0.0"
        workCommonVersion = "1.0.0"
        workerPluginScmVersion = "1.0.0"
        pluginSdkVersion = "1.0.0"
        commonCodeccVersion = "1.0.0"
    }

    def mavenRepoUrl = System.getProperty("mavenRepoUrl")
    if (mavenRepoUrl == null) {
        mavenRepoUrl = System.getenv("mavenRepoUrl")
    }
    if (mavenRepoUrl == null) {
        mavenRepoUrl = MAVEN_REPO_URL
    }

    repositories {
        mavenLocal()
        maven { url mavenRepoUrl }
        maven { url "https://repo.spring.io/libs-milestone" }
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "io.spring.gradle:dependency-management-plugin:$gradleDependencyVersion"
        classpath "com.github.jengelman.gradle.plugins:shadow:$gradleShadowVersion"
        classpath 'org.ajoberstar:grgit:1.1.0'
    }
}

ext {
    commit = null
    // Open the Git repository in the current directory.
    def gitDir = file('.git')
    if (gitDir.exists()) {
        gitDir = file('.')
    } else {
        gitDir = file('../.git')
        if (gitDir.exists()) {
            gitDir = file('..')
        }
    }

    if (gitDir.exists()) {

        git = Grgit.open(gitDir)

        commit = git.head()
        // Alternative is using abbreviatedId of head() method.
        // revision = git.head().abbreviatedId
    }
}

allprojects {
    group "cn.code.zeus"


    def mavenRepoUrl = System.getProperty("mavenRepoUrl")
    if (mavenRepoUrl == null) {
        mavenRepoUrl = System.getenv("mavenRepoUrl")
    }
    if (mavenRepoUrl == null) {
        mavenRepoUrl = MAVEN_REPO_URL
    }

    repositories {
        mavenLocal()
        maven { url mavenRepoUrl }
        maven { url "https://repo.spring.io/libs-milestone" }
        mavenCentral()
        jcenter()
    }

}

subprojects {
    apply plugin: "idea"
    apply plugin: "java"
    apply plugin: "kotlin"
    apply plugin: "kotlin-spring"
    apply plugin: "io.spring.dependency-management"

    //noinspection GroovyAssignabilityCheck
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    tasks.withType(JavaCompile).all {
        options.encoding = "UTF-8"
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    jar.onlyIf { !sourceSets.main.allSource.files.isEmpty() }

    configurations {
        ktlint
//        all*.exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
//        all*.exclude group: "org.springframework.boot", module: "spring-boot-starter-tomcat"
//        all*.exclude group: "org.apache.tomcat", module: "tomcat-jdbc"
        all*.exclude group: "org.slf4j", module: "log4j-over-slf4j"
        all*.exclude group: "org.slf4j", module: "slf4j-log4j12"
        all*.exclude group: "org.slf4j", module: "slf4j-nop"
    }

    dependencies {
        ktlint "com.github.shyiko:ktlint:0.29.0"
        // https://mvnrepository.com/artifact/com.github.shyiko/ktlint
        testCompile group: 'com.github.shyiko', name: 'ktlint', version: '0.29.0'
        testCompile "junit:junit"
    }

    task ktlint(type: JavaExec, group: "verification") {
        description = "Check Kotlin code style."
        classpath = configurations.ktlint
        main = "com.github.shyiko.ktlint.Main"
        args "src/**/*.kt"
        // to generate report in checkstyle format prepend following args:
        // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
        // see https://github.com/shyiko/ktlint#usage for more
    }

    task ktlintFormat(type: JavaExec, group: "formatting") {
        description = "Fix Kotlin code style deviations."
        classpath = configurations.ktlint
        main = "com.github.shyiko.ktlint.Main"
        args "-F", "src/**/*.kt"
    }


    dependencyManagement {
        applyMavenExclusions = false

        dependencies {
            imports {
                mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
            }
            dependency "com.google.guava:guava:$guavaVersion"
            dependency "com.floragunn:search-guard-ssl:$searchGuardSSLVersion"
            dependency "org.elasticsearch:elasticsearch:$esVersion"
            dependency "org.elasticsearch.client:transport:$esVersion"
            dependency "org.elasticsearch.plugin:transport-netty4-client:$esVersion"
            dependency "org.hashids:hashids:$hashidsVersion"
            dependency "javax.ws.rs:javax.ws.rs-api:$jaxrsVersion"
            dependency "com.squareup.okhttp3:okhttp:$okHttpVersion"
            dependency "org.apache.httpcomponents:httpclient:$httpclientVersion"
            dependency "org.apache.commons:commons-exec:$commonExecVersion"
            dependency "org.bouncycastle:bcprov-jdk16:$bouncyCastleVersion"
            dependency "dom4j:dom4j:$dom4jVersion"
            dependency "org.apache.commons:commons-compress:$compressVersion"
            dependency "org.reflections:reflections:$reflectionsVersion"
            dependency "com.github.fge:json-schema-validator:$jsonSchemaVersion"
            dependency "com.github.ulisesbocchio:jasypt-spring-boot-starter:$jasyptVersion"
            dependency "org.jolokia:jolokia-core:$jolokiaVersion"

            dependencySet(group: "org.springframework.cloud", version: "$springConsulVersion") {
                entry "spring-cloud-starter-consul-discovery"
                entry "spring-cloud-starter-consul-core"
            }
            dependencySet(group: "io.swagger", version: "$swaggerVersion") {
                entry "swagger-annotations"
                entry "swagger-jersey2-jaxrs"
            }
            dependencySet(group: "com.fasterxml.jackson.module", version: "$jacksonVersion") {
                entry "jackson-module-kotlin"
            }
            dependencySet(group: "com.fasterxml.jackson.core", version: "$jacksonVersion") {
                entry "jackson-core"
                entry "jackson-databind"
                entry "jackson-annotations"
            }
            dependencySet(group: "com.fasterxml.jackson.jaxrs", version: "$jacksonVersion") {
                entry "jackson-jaxrs-json-provider"
                entry "jackson-jaxrs-base"
            }
            dependencySet(group: "io.github.openfeign", version: "$feignVersion") {
                entry "feign-jaxrs"
                entry "feign-okhttp"
                entry "feign-jackson"
            }
            dependencySet(group: "io.github.openfeign.form", version: "$feignFormVersion") {
                entry "feign-form"
                entry "feign-form-spring"
            }
            dependencySet(group: "org.slf4j", version: "$slf4jVersion") {
                entry "slf4j-api"
                entry "slf4j-simple"
            }
            dependencySet(group: "io.jsonwebtoken", version: "$jjwtVersion") {
                entry "jjwt"
            }
            dependencySet(group: 'org.mockito', version: "$mockitoVersion") {
                entry "mockito-all"
            }
            dependencySet(group: 'net.sf.json-lib', version: "$jsonLibVersion") {
                entry "json-lib"
            }
            dependencySet(group: 'com.cronutils', version: "$cronutilsVersion") {
                entry "cron-utils"
            }
            dependencySet(group: 'ch.qos.logback', version: "$logbackVersion") {
                entry "logback-core"
                entry "logback-classic"
            }
            dependencySet(group: 'org.springframework.boot', version: "$springBootRedisVersion") {
                entry "spring-boot-starter-data-redis"
            }
            dependencySet(group: 'com.amazonaws', version: "$awsS3Version") {
                entry "aws-java-sdk-s3"
            }
        }
    }
}